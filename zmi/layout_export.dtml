<dtml-var manage_page_header>
<dtml-let management_view="'Export'">
<dtml-var manage_tabs>
</dtml-let>

<p>You will find below what the Python dictionary used to create the current
layout should look like.</p>

<dtml-let layoutdef=getLayoutDefinition
          ncols="layoutdef['ncols']"
          rows="layoutdef['rows']"
          cr="_.chr(13)"
          squote="_.chr(39)"
          dquote="_.chr(34)">
<pre>
<dtml-var id>_layout = {
    'widgets': {
<dtml-in objectValues>
        '<dtml-var getWidgetId>': {
            'type': '<dtml-var widget_type>',
            'data': {
<dtml-in propertyItems>
<dtml-if "_.same_type(_['sequence-item'], '')">
<dtml-if "_['sequence-item'].find(dquote) != -1 or
          _['sequence-item'].find(cr) != -1">
                '<dtml-var sequence-key>': """<dtml-var sequence-item html_quote>""",
<dtml-elif "_['sequence-item'].find(squote) != -1">
                '<dtml-var sequence-key>': "<dtml-var sequence-item html_quote>",
<dtml-else>
                '<dtml-var sequence-key>': '<dtml-var sequence-item html_quote>',
</dtml-if>
<dtml-else>
                '<dtml-var sequence-key>': <dtml-var sequence-item>,
</dtml-if>
</dtml-in>
            },
        },
</dtml-in>
    },
    'layout': {
<dtml-in propertyItems>
<dtml-if "_.same_type(_['sequence-item'], '')">
        '<dtml-var sequence-key>': '<dtml-var sequence-item>',
<dtml-else>
        '<dtml-var sequence-key>': <dtml-var sequence-item>,
</dtml-if>
</dtml-in>
        'ncols': <dtml-var ncols>,
        'rows': [
<dtml-in rows>
<dtml-in sequence-item>
<dtml-if sequence-start>            [<dtml-else> </dtml-if><dtml-var sequence-item>,
            <dtml-if sequence-end>],
</dtml-if>
</dtml-in>
</dtml-in>
        ],
    },
}
</pre>

</dtml-let>

<dtml-var manage_page_footer>
